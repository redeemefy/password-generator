{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction AppComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"label\", 16);\n    i0.ɵɵtext(3, \" Your Password \");\n    i0.ɵɵelement(4, \"input\", 17);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", ctx_r0.password);\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.password = '';\n    this.passwordLength = 0;\n    this.includeLetters = false;\n    this.includeNumbers = false;\n    this.includeSymbols = false;\n  }\n  disabledBth() {\n    return !(this.passwordLength !== 0 && (this.includeLetters || this.includeNumbers || this.includeSymbols));\n  }\n  onChangeLength(value) {\n    const parsedValue = parseInt(value);\n    if (!isNaN(parsedValue)) {\n      this.passwordLength = parsedValue;\n    }\n  }\n  onChangeUseLetters() {\n    this.includeLetters = !this.includeLetters;\n  }\n  onChangeUseNumbers() {\n    this.includeNumbers = !this.includeNumbers;\n  }\n  onChangeUseSymbols() {\n    this.includeSymbols = !this.includeSymbols;\n  }\n  generatePassword() {\n    const lowerCaseLetters = 'abcdefghijklmnopqrstuvwxyz';\n    const upperCaseLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    const numbers = '0123456789';\n    const symbols = '!@#$%^&*()_-,.';\n    let availableCharacters = '';\n    if (this.includeLetters) {\n      availableCharacters += lowerCaseLetters;\n      availableCharacters += upperCaseLetters;\n    }\n    if (this.includeNumbers) {\n      availableCharacters += numbers;\n    }\n    if (this.includeSymbols) {\n      availableCharacters += symbols;\n    }\n    availableCharacters.split('');\n    const generatedPassword = [];\n    for (let i = 0; i < this.passwordLength; i += 1) {\n      const max = availableCharacters.length;\n      const ran = Math.random();\n      const idx = Math.floor(ran * (max + 1));\n      generatedPassword.push(availableCharacters[idx]);\n    }\n    this.password = generatedPassword.join('');\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 31,\n  vars: 2,\n  consts: [[1, \"columns\", 2, \"margin-top\", \"2rem\"], [1, \"column\", \"is-half\", \"is-offset-one-quarter\"], [1, \"box\"], [1, \"title\"], [1, \"field\"], [1, \"control\"], [\"for\", \"length\"], [\"type\", \"text\", \"name\", \"length\", 1, \"input\", 3, \"input\"], [\"for\", \"use-letters\", 1, \"checkbox\"], [\"type\", \"checkbox\", \"id\", \"use-letters\", 1, \"form-check-input\", 3, \"change\"], [\"for\", \"use-numbers\", 1, \"checkbox\"], [\"type\", \"checkbox\", \"id\", \"use-numbers\", 1, \"form-check-input\", 3, \"change\"], [\"for\", \"use-symbols\", 1, \"form-check-label\"], [\"type\", \"checkbox\", \"id\", \"use-symbols\", 1, \"form-check-input\", 3, \"change\"], [1, \"button\", \"is-success\", \"is-fullwidth\", 3, \"disabled\", \"click\"], [\"class\", \"field\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"text\", \"name\", \"password\", 1, \"input\", 3, \"value\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \"Password Generator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"hr\");\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Length\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"input\", function AppComponent_Template_input_input_10_listener($event) {\n        return ctx.onChangeLength($event.target.value);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"div\", 5)(13, \"label\", 8)(14, \"input\", 9);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_14_listener() {\n        return ctx.onChangeUseLetters();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \" Use letters \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 4)(17, \"div\", 5)(18, \"label\", 10)(19, \"input\", 11);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_19_listener() {\n        return ctx.onChangeUseNumbers();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \" Use numbers \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\", 4)(22, \"div\", 5)(23, \"label\", 12)(24, \"input\", 13);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_24_listener() {\n        return ctx.onChangeUseSymbols();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \" Use symbols \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 4)(27, \"div\", 5)(28, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_28_listener() {\n        return ctx.generatePassword();\n      });\n      i0.ɵɵtext(29, \"Generate\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(30, AppComponent_div_30_Template, 5, 1, \"div\", 15);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(28);\n      i0.ɵɵproperty(\"disabled\", ctx.disabledBth());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.password);\n    }\n  },\n  dependencies: [i1.NgIf]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}